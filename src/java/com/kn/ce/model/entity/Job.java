package com.kn.ce.model.entity;
// Generated Oct 1, 2016 10:00:22 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Job generated by hbm2java
 */
@Entity
@Table(name="job"
    ,catalog="creative_edge"
)
public class Job  implements java.io.Serializable {


     private Long jobNo;
     private Customer customer;
     private User user;
     private Date date;
     private Date delivryDate;
     private String remarks;
     private String status;
     private Set<RawItemIssue> rawItemIssues = new HashSet<RawItemIssue>(0);
     private Set<Invoice> invoices = new HashSet<Invoice>(0);
     private Set<JobLine> jobLines = new HashSet<JobLine>(0);
     private Set<AdvancePayment> advancePayments = new HashSet<AdvancePayment>(0);
     
     //calculated fields
     private Double amount;
     private Double advance;

    public Job() {
    }

	
    public Job(Customer customer, User user, Date date, Date delivryDate, String remarks, String status) {
        this.customer = customer;
        this.user = user;
        this.date = date;
        this.delivryDate = delivryDate;
        this.remarks = remarks;
        this.status = status;
    }
    public Job(Customer customer, User user, Date date, Date delivryDate, String remarks, String status, Set<RawItemIssue> rawItemIssues, Set<Invoice> invoices, Set<JobLine> jobLines, Set<AdvancePayment> advancePayments) {
       this.customer = customer;
       this.user = user;
       this.date = date;
       this.delivryDate = delivryDate;
       this.remarks = remarks;
       this.status = status;
       this.rawItemIssues = rawItemIssues;
       this.invoices = invoices;
       this.jobLines = jobLines;
       this.advancePayments = advancePayments;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="job_no", unique=true, nullable=false)
    public Long getJobNo() {
        return this.jobNo;
    }
    
    public void setJobNo(Long jobNo) {
        this.jobNo = jobNo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cust_id", nullable=false)
    public Customer getCustomer() {
        return this.customer;
    }
    
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="username", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date", nullable=false, length=19)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="delivry_date", nullable=false, length=10)
    public Date getDelivryDate() {
        return this.delivryDate;
    }
    
    public void setDelivryDate(Date delivryDate) {
        this.delivryDate = delivryDate;
    }

    
    @Column(name="remarks", nullable=false)
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    
    @Column(name="status", nullable=false, length=10)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="job")
    public Set<RawItemIssue> getRawItemIssues() {
        return this.rawItemIssues;
    }
    
    public void setRawItemIssues(Set<RawItemIssue> rawItemIssues) {
        this.rawItemIssues = rawItemIssues;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="job")
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="job")
    public Set<JobLine> getJobLines() {
        return this.jobLines;
    }
    
    public void setJobLines(Set<JobLine> jobLines) {
        this.jobLines = jobLines;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="job")
    public Set<AdvancePayment> getAdvancePayments() {
        return this.advancePayments;
    }
    
    public void setAdvancePayments(Set<AdvancePayment> advancePayments) {
        this.advancePayments = advancePayments;
    }

    @Transient
    public Double getAmount() {
        return amount;
    }

    public void setAmount(Double amount) {
        this.amount = amount;
    }

    @Transient
    public Double getAdvance() {
        return advance;
    }

    public void setAdvance(Double advance) {
        this.advance = advance;
    }

    


    


}


